#include <vector>
#include <algorithm>
#include <iostream>

using namespace std;

vector<int> twoSum(vector<int>& nums, int target) {
    vector<int> result;
    vector<pair<int, int>> numsWithIndex;

    for (int i = 0; i < nums.size(); i++) {
        numsWithIndex.push_back({nums[i], i});
    }

    sort(numsWithIndex.begin(), numsWithIndex.end());

    int left = 0;
    int right = nums.size() - 1;

    while (left < right) {
        int currentSum = numsWithIndex[left].first + numsWithIndex[right].first;
        if (currentSum == target) {
            result = {numsWithIndex[left].second, numsWithIndex[right].second};
            break;
        } else if (currentSum < target) {
            left++;
        } else {
            right--;
        }
    }

    return result;
}

int main() {
    int n;
    cout << "Enter the number of elements in the array: ";
    cin >> n;

    vector<int> nums(n);
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++) {
        cin >> nums[i];
    }

    int target;
    cout << "Enter the target sum: ";
    cin >> target;

    vector<int> result = twoSum(nums, target);

    if (!result.empty()) {
        cout << "Indices of the two numbers that add up to the target: " << result[0] << ", " << result[1] << endl;
    } else {
        cout << "No solution found!" << endl;
    }

    return 0;
}
