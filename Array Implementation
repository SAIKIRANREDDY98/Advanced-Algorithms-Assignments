#include <iostream>
using namespace std;

const int MAX_ROWS = 4; 
const int MAX_COLS = 5; 

int main()
{
    int sparseMatrix[MAX_ROWS][MAX_COLS] =
    {
        {0 , 0 , 3 , 0 , 4 },
        {0 , 0 , 5 , 7 , 0 },
        {0 , 0 , 0 , 0 , 0 },
        {0 , 2 , 6 , 0 , 0 }
    };

    int k = 0;
    for (int i = 0; i < MAX_ROWS; i++)
        for (int j = 0; j < MAX_COLS; j++)
            if (sparseMatrix[i][j] != 0)
                k++;

    int Matrix[3][k];

    int k = 0;
    for (int i = 0; i < MAX_ROWS; i++)
        for (int j = 0; j < MAX_COLS; j++)
            if (sparseMatrix[i][j] != 0)
            {
               Matrix[0][k] = i;
               Matrix[1][k] = j;
               Matrix[2][k] = sparseMatrix[i][j];
                k++;
            } 

    cout << "Compressed Matrix:\n";
    for (int i = 0; i < 3; i++)
    {
        for (int j = 0; j < k; j++)
            cout << " " << Matrix[i][j];

        cout << "\n";
    }
    return 0;
}

